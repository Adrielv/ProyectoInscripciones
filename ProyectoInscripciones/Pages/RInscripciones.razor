@page "/rinscripciones/{InscripcionesId:int}"
@using ProyectoInscripciones.Controllers
@using ProyectoInscripciones.Models

    <EditForm Model="@inscripciones" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <div class="container">

            <label for="InscripcionesId" class="col-md-2 col-form-label">InscripcionesId</label>
            <input type="number" id="InscripcionesId" class="col-md-2 form-check" @bind="inscripciones.InscripcionesId" />
            <ValidationMessage For="@(() => inscripciones.InscripcionesId)" />

            <br />

            <button type="button" class="col-md-2 btn btn-info" @onclick="Buscar">Buscar</button>


        </div>
        <div class="container">
            <label>Estudiante</label>
            <div class="col-md-2 ">
                <InputSelect @bind-Value="@EstudianteSeleccionado" class="form-control " @onchange="CargarEstudiante" @onclick="CargarEstudiante">

                    @foreach (var item in listaEstudiante)
                    {
                        <option value="@item.EstudianteId">@item.Nombre</option>
                    }
                </InputSelect>
            </div>


        </div>
        <div class="container">

            <label for="Fecha" class="col-md-2 col-form-label">Fecha</label>
            <input type="date" id="Fecha" class="col-md-2 form-check" @bind="inscripciones.Fecha" />
            <ValidationMessage For="@(() => inscripciones.Fecha)" />

        </div>
        <div class="container">

            <label for="Monto" class="col-md-2 col-form-label">Monto</label>
            <input type="number" id="Monto" class="col-md-2 form-check" @bind="inscripciones.Monto" />
            <ValidationMessage For="@(() => inscripciones.Monto)" />

        </div>
        <div class="container">

            <label for="Balance" class="col-md-2 col-form-label">Balance</label>
            <input type="number" id="Balance" class="col-md-2 form-check" @bind="inscripciones.Balance" />
            <ValidationMessage For="@(() => inscripciones.Balance)" />

        </div>

        <div class="container">
            <label for="Asignatura">Asignatura</label>
            <div class="col-md-2 ">
                <InputSelect @bind-Value="@AsignaturaSelecionada" class="form-control" @onchange="CargarAsignatura" @onclick="CargarAsignatura">

                    @if (listaAsignatura.Count == 0)
                    {
                        <option value="">No hay Asigntura Agregada</option>
                    }
                    else
                    {                       

                        @foreach (var item in listaAsignatura)
                        {
                            <option value="@item.AsignaturaId">@item.Descripcion</option>
                        }

                    }
                </InputSelect>
            </div>
        </div>
        <br/>
        <div class="container">

            <button type="button" class="btn btn-primary" @onclick="AgregarAsignatura">Agregar</button>
        </div>
        <div>
            <table class="table">
                <thead>

                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Descripcion</th>
                        <th scope="col">Creditos</th>
                        <th scope="col">SubTotal</th>
                    </tr>

                </thead>

                <tbody>
                    @foreach (var asignatura in inscripciones.Detalles)
                    {
                        <tr>


                            <td scope="row">@asignatura.AsignaturaId</td>
                            <td>@asignatura.Descripcion</td>
                            <td>@asignatura.Creditos</td>
                            <td>@asignatura.Subtotal </td>


                        </tr>
                    }

                </tbody>
            </table>
        </div>

        <br />

        <ValidationSummary />

        <div class="form-group">

            <button type="submit" class="col-md-2 btn btn-success">Guardar</button>
            <button type="button" class="col-md-2 btn btn-primary" @onclick="Limpiar">Limpiar</button>
            <button type="button" class="col-md-2 btn btn-danger" @onclick="Eliminar">Eliminar</button>


        </div>

        <h1>@Mensaje</h1>


    </EditForm>



@code {
    private ControllersInscripciones controllers = new ControllersInscripciones();
    private ControllersAsignaturas controllersAsignaturas = new ControllersAsignaturas();
    private ControllersEstudiante controllersEstudiante = new ControllersEstudiante();
    private Inscripcion inscripciones = new Inscripcion();
    public string Mensaje;

    [Parameter] public int InscripcionesId { get; set; }

    private string EstudianteSeleccionado { get; set; }
    private string AsignaturaSelecionada { get; set; }
    private List<Estudiante> listaEstudiante = new List<Estudiante>();
    private List<Asignaturas> listaAsignatura = new List<Asignaturas>();


    private Asignaturas Asignatura { get; set; }
    private Estudiante Estudiante { get; set; }

    private int Precio = 500;
    private int credito = 0;


    protected override void OnInitialized()
    {
        listaEstudiante = controllersEstudiante.GetList(e => true);
        listaAsignatura = controllersAsignaturas.GetList(e => true);


        inscripciones = new Inscripcion();
        Asignatura = new Asignaturas();
        Estudiante = new Estudiante();

        if (InscripcionesId != 0)
        {
            inscripciones.InscripcionesId = InscripcionesId;
            Buscar();
        }
    }


    private void Guardar()
    {

        inscripciones.EstudianteId = Convert.ToInt32(EstudianteSeleccionado);

        if (inscripciones.InscripcionesId == 0)
        {
            controllers.Guardar(inscripciones);
            Mensaje = "Guardo";
            Limpiar();
        }
        else
        {
            if (controllers.Buscar(inscripciones.InscripcionesId) != null)
            {
                controllers.Modificar(inscripciones);
                Mensaje = "Modifico";
                Limpiar();
            }

        }



    }
    private void Limpiar()
    {
        inscripciones = new Inscripcion();

    }
    private void Eliminar()
    {
        if(inscripciones.InscripcionesId != 0)
        {
            if(controllers.Buscar(inscripciones.InscripcionesId) != null)
            {

                controllers.Eliminar(inscripciones.InscripcionesId);
                Mensaje = "Eliminado";
                Limpiar();

            }else
            {
                Mensaje = "Id no existe";
            }

        }else
        {
            Mensaje = "Selecione un ID";
        }


    }


    private void Buscar()
    {
        if(inscripciones.InscripcionesId != 0)
        {
            if(controllers.Buscar(inscripciones.InscripcionesId) != null)
            {

                inscripciones = controllers.Buscar(inscripciones.InscripcionesId);

            }else
            {
                Mensaje = "Id no existe";
            }

        }else
        {
            Mensaje = "Selecione un ID";
        }


    }
    private void CargarEstudiante()
    {
        try
        {
            Estudiante = controllersEstudiante.Buscar(Convert.ToInt32(EstudianteSeleccionado));
        }
        catch (Exception)
        {
            Mensaje = "Error al cargar estudiante";
        }
    }
    private void CargarAsignatura()
    {
        try
        {
            Asignatura = controllersAsignaturas.Buscar(Convert.ToInt32(AsignaturaSelecionada));
        }
        catch (Exception)
        {
            Mensaje = "Error al cargar Asignatura";
        }
    }

    private void AgregarAsignatura()
    {

        if (AsignaturaSelecionada == null)
        {
            Mensaje = "debe seleccionar una asignatura";
        }

        else
        {
            if (inscripciones.Detalles.Any(i => i.AsignaturaId == Asignatura.AsignaturaId))
            {
                Mensaje = "Esta Asignatura ya esta agregada";
            }
            else
            {

                inscripciones.Detalles.Add(new InscripcionDetalle()
                {
                    InscripcionesId = inscripciones.InscripcionesId,
                    AsignaturaId = Asignatura.AsignaturaId,
                    Descripcion = Asignatura.Descripcion,
                    Creditos = Convert.ToInt32(Asignatura.Creditos),
                    Subtotal = (Convert.ToInt32(Asignatura.Creditos) * Precio)
                });
                Asignatura = new Asignaturas();

                int total = 0;

                foreach (var item in inscripciones.Detalles)
                {
                    total += item.Subtotal;
                    credito += item.Creditos;
                }

                inscripciones.Monto = total;
                //inscripciones.Tomado = credito;
            }

        }
    }
}

