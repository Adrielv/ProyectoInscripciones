@page "/rpagos/{PagosId:int}"
@using ProyectoInscripciones.Controllers
@using ProyectoInscripciones.Models

    <EditForm Model="@pagos" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="container">

            <label for="PagosId" class="col-md-2 col-form-label">InscripcionesId</label>
            <input type="number" id="PagosId" class="col-md-2 form-check" @bind="pagos.PagosId" />
            <ValidationMessage For="@(() => pagos.PagosId)" />
            <br />

            <button type="button" class="col-md-2 btn btn-info" @onclick="Buscar">Buscar</button>

        </div>
        <div class="container">

            <label for="Fecha" class="col-md-2 col-form-label">Fecha</label>
            <input type="date" id="Fecha" class="col-md-2 form-check" @bind="pagos.Fecha" />
            <ValidationMessage For="@(() => pagos.Fecha)" />

        </div>
        <div class="container">
            <label>Estudiante</label>
            <div class="col-md-2 ">
                <InputSelect @bind-Value="@EstudianteSeleccionado" class="form-control " @onchange="CargarEstudiante" @onclick="CargarEstudiante">
                    @if (listaEstudiante.Count == 0)
                    {
                        <option value="-1">No hay Estudiante</option>
                    }
                    else
                    {
                        @foreach (var item in listaEstudiante)
                        {
                            <option value="@item.EstudianteId">@item.Nombre</option>
                        }
                    }
                    </InputSelect>
            </div>
        </div>
        <div class="container">

            <label for="Monto" class="col-md-2 col-form-label">Monto</label>
            <input type="number" id="Monto" class="col-md-2 form-check" @bind="pagos.Monto" />
            <ValidationMessage For="@(() => pagos.Monto)" />

        </div>
        <br />

        <ValidationSummary />

        <div class="form-group">

            <button type="submit" class="col-md-2 btn btn-success">Guardar</button>
            <button type="button" class="col-md-2 btn btn-primary" @onclick="Limpiar">Limpiar</button>
            <button type="button" class="col-md-2 btn btn-danger" @onclick="Eliminar">Eliminar</button>


        </div>

        <h1>@Mensaje</h1>


    </EditForm>



@code {
    private ControllersPagos controllers = new ControllersPagos();
    private Pagos pagos = new Pagos();
    public string Mensaje;
    [Parameter] public int PagosId { get; set; }

     private string EstudianteSeleccionado { get; set; }
     private Estudiante Estudiante { get; set; }
     private List<Estudiante> listaEstudiante = new List<Estudiante>();
     private ControllersEstudiante controllersEstudiante = new ControllersEstudiante();

        protected override void OnInitialized()
        {
            pagos = new Pagos();
            listaEstudiante = controllersEstudiante.GetList(e => true);

		    if (PagosId != 0)
		    {
		        pagos.PagosId = PagosId;
			    Buscar();
		    }
        }


        private void Guardar()
        {
        pagos.EstudianteId = Convert.ToInt32(EstudianteSeleccionado);

        if (pagos.PagosId == 0)
        {
            controllers.Guardar(pagos);
            Mensaje = "Guardo";
            Limpiar();
        }
        else
        {
            if (controllers.Buscar(pagos.PagosId) != null)
            {
                controllers.Modificar(pagos);
                Mensaje = "Modifico";
                Limpiar();
            }

        }



    }
    private void Limpiar()
    {
        pagos = new Pagos();

    }
    private void Eliminar()
    {
        if (pagos.PagosId != 0)
        {
            if (controllers.Buscar(pagos.PagosId) != null)
            {

                controllers.Eliminar(pagos.PagosId);
                Mensaje = "Eliminado";
                Limpiar();

            }
            else
            {
                Mensaje = "Id no existe";
            }

        }
        else
        {
            Mensaje = "Selecione un ID";
        }


    }
    private void Buscar()
    {
        if (pagos.PagosId != 0)
        {
            if (controllers.Buscar(pagos.PagosId) != null)
            {

                pagos = controllers.Buscar(pagos.PagosId);

            }
            else
            {
                Mensaje = "Id no existe";
            }

        }
        else
        {
            Mensaje = "Selecione un ID";
        }


    }
    private void CargarEstudiante()
    {
        try
        {
            Estudiante = controllersEstudiante.Buscar(Convert.ToInt32(EstudianteSeleccionado));
        }
        catch (Exception)
        {
            Mensaje = "Error al cargar estudiante";
        }
    }
}
